import game.Scene;

class Lecture4Task1{
	public static void main(String[] args){
		//test2();
		task();
	}
	private static void test2(){
	}
	private static void task(){
		System.out.println("\n=======================================");
		System.out.println("CREATE SCENE");
		Scene.create();
		System.out.println("\n=======================================");
		System.out.println("RUN GAME");
		Scene.run();
		System.out.println("\n=======================================");
		System.out.println("SHOW RESULT");
		Scene.showResult();
	}
}

/* output:
=======================================
CREATE SCENE
Создаю 6 юнитов

-- new unit --
У нового мага будет 3 страничная книга заклинаний:
MigraineAllMagicians
TouchFireNeighbors
StrikeLightningOne
Created Magician "Magician0" located 8 health 0

-- new unit --
У нового мага будет 2 страничная книга заклинаний:
FireWallEvenPositions
MigraineAllMagicians
Created Magician "Magician1" located 2 health 4

-- new unit --
У нового мага будет 3 страничная книга заклинаний:
MigraineAllMagicians
FireWallEvenPositions
ChainLightningAllOthers
Created Magician "Magician2" located 3 health 5

-- new unit --
У нового мага будет 2 страничная книга заклинаний:
HealMyself
MigraineAllMagicians
Created Magician "Magician3" located 4 health 1

-- new unit --
У нового мага будет 1 страничная книга заклинаний:
HealMyself
Created Magician "Magician4" located 5 health 2

-- new unit --
Created Monster "Monster5" located 6 health 12

=======================================
RUN GAME

--- game turn 1 --- В живых сейчас 6

-- ☻ Маг Magician0 на поз. 8 -- читает заклинание TouchFireNeighbors

-- ☻ Маг Magician1 на поз. 2 -- читает заклинание MigraineAllMagicians
, решил напасть на Magician0, на поз. 8
, с уроном 1. Здоровье врага было 0, теперь -1
Magician0 убит!!!!!!!!!!!!
, стал МАЗОХИСТОМ
, решил напасть на Magician1, на поз. 2
, с уроном 1. Здоровье врага было 4, теперь 3
, решил напасть на Magician2, на поз. 3
, с уроном 1. Здоровье врага было 5, теперь 4
, решил напасть на Magician3, на поз. 4
, с уроном 1. Здоровье врага было 1, теперь 0
, решил напасть на Magician4, на поз. 5
, с уроном 1. Здоровье врага было 2, теперь 1

-- ☻ Маг Magician2 на поз. 3 -- читает заклинание FireWallEvenPositions
, решил напасть на Magician0, на поз. 8
, но враг уже мерт ...
, решил напасть на Magician1, на поз. 2
, с уроном 1. Здоровье врага было 3, теперь 2
, решил напасть на Magician3, на поз. 4
, с уроном 2. Здоровье врага было 0, теперь -2
Magician3 убит!!!!!!!!!!!!
, решил напасть на Monster5, на поз. 6
, с уроном 1. Здоровье врага было 12, теперь 11

-- ☻ Маг Magician4 на поз. 5 -- читает заклинание HealMyself
Маг Magician4 исцелен на 1. Здоровье: 1 -> 2

-- ▼ Монстр Monster5 на поз. 6 --
, решил напасть на Magician2, на поз. 3
, с уроном 7. Здоровье врага было 4, теперь -3
Magician2 убит!!!!!!!!!!!!

--- game turn 2 --- В живых сейчас 3

-- ☻ Маг Magician1 на поз. 2 -- читает заклинание MigraineAllMagicians
, стал МАЗОХИСТОМ
, решил напасть на Magician1, на поз. 2
, с уроном 1. Здоровье врага было 2, теперь 1
, решил напасть на Magician4, на поз. 5
, с уроном 2. Здоровье врага было 2, теперь 0

-- ☻ Маг Magician4 на поз. 5 -- читает заклинание HealMyself
Маг Magician4 исцелен на 1. Здоровье: 0 -> 1

-- ▼ Монстр Monster5 на поз. 6 --
, решил напасть на Magician1, на поз. 2
, с уроном 7. Здоровье врага было 1, теперь -6
Magician1 убит!!!!!!!!!!!!

--- game turn 3 --- В живых сейчас 2

-- ☻ Маг Magician4 на поз. 5 -- читает заклинание HealMyself
Маг Magician4 исцелен на 1. Здоровье: 1 -> 2

-- ▼ Монстр Monster5 на поз. 6 --
, решил напасть на Magician4, на поз. 5
, с уроном 7. Здоровье врага было 2, теперь -5
Magician4 убит!!!!!!!!!!!!

=======================================
SHOW RESULT
Победил Monster5 (тип Monster)
*/
/*
Задание 4. Битвы магов.
Сегодня будем делать игру.

Есть сцена (game.Scene).
На сцену можно добавить до 10 Персонажей (game.Character)
у каждого персонажа есть позиция (от 0 до 9). На которой он стоит.
 На позиции с одинаковым номером может стоять только один персонаж.
В позициях допускаются пропуски, например, на сцене могут быть всего
 два персонажа: на позиции 1 и на позиции 7.

У абстрактного персонажа есть характеристики:



Текущее здоровье: целое число
	Имя
	Если текущее здоровье у монстра стало отрицательным - он удаляется
	 со сцены и на экран выводится текст "<имя персонажа> убит"

Конкретные персонажи бывают двух типов:
Монстры. Могут атаковать любого персонажа, напрямую нанося урон здоровью.
	Количество урона для каждого конкретного монстра одинаковое, но разные
	 экземпляры монстров могут наносить разное количество урона.
	Если монстр атакует любого персонажа, - на экран должен выводится текст
	 "Монстр <имя> атакует <имя, цели> на <количество> единиц урона урона "
	Маги. Могут колдовать заклинания. Заклинания могут делать что угодно
	со сценой и персонажами на ней.
	У каждого мага есть список заклинаний, которые он может использовать,
	 но не больше 3.

Создайте абстрактный класс game.Spell с методом cast - произнесение заклинания
и полем "название заклинания".

Создайте несколько конкретных заклинаний. Например:
Исцеление - добавляет очков здоровья магу, произнесшему заклинания.
Молния - наносит урон любому персонажу.
Цепная молния - наносит урон, всем персонажам на сцене, кроме мага,
 который произносит заклинание.
Стена огня - наносит урон всем персонажам на четных позициях.
Огненное касание - наносит урон персонажу, стоящему на соседней с магом позиции.
Если на соседних позициях персонажей нет - никому урон не наносится.
Изгнание монстров - наносит урон всем монстрам.
Мигрень - наносит урон всем магам.

Если маг произносит любое заклинание то экран обязательно должен выводится
 общий текст для всех заклинаний:
"Маг <имя> читает заклинание <название заклинания>"
дополнительно должен быть выведен текст, зависящий от заклинания.
Например
"Маг <имя> исцелен на <количество добавленных очков здоровья>.
 Теперь у него <текущее количество> здоровья"
"Цепная молния ударяет по <список персонажей>. Каждый получает <количество> урона."

Игра - пошаговая. В каждый ход все персонажи со сцены делают одно действие:
монстр атакует кого-то, а маг читает любое известное ему заклинание.

Порядок, в котором персонажи выполняют действия может быть любым.
Каждый персонаж сам за себя, если на сцене остался только один персонаж -
 то игра завершается и на экран выводится имя и тип (маг, монстр) победившего персонажа.

Создайте сцену со случайным количеством случайных персонажей, запустите игру.

Замечания к заданию:



Задание довольно сложное и, скорее всего, растянется на несколько занятий.
	Обратите внимание, что многие вещи я намеренно не стал детализировать.
	Например, в каких классах располагаются методы, отвечающие за нанесение
	 урона и вывод сообщений на экран, кто управляет сценой и ходами,
	  как происходит генерация начальной сцены, какая книга заклинаний будет
	   у каждого мага, кого атакуют монстры или какое заклинание читает маг и т.п.

	Ваша задача - проанализировать требования и сделать такую структуру классов,
	 которая наиболее гибко будет решать эти требованиях.

	При проектировании структуры классов помните про "правила хорошего программирования":
	- Дублирование кода обычно плохо
	- Код должен быть простым и расширяемым.

	Например, что будет, если в игру добавится новый персонаж с какими-то новыми
	 способностями ( рыцарь, который от всех заклинаний получает только половину
	  урона или разбойник, который имеет некоторый шанс уклониться от атаки монстра)?
*/