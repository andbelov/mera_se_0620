import game.Scene;

class Lecture4Task1{
	public static void main(String[] args){
		//test2();
		task();
	}
	private static void test2(){
	}
	private static void task(){
		System.out.println("=======================================");
		System.out.println("CREATE SCENE");
		Scene.create();
		System.out.println("=======================================");
		System.out.println("RUN GAME");
		Scene.run();
		System.out.println("=======================================");
		System.out.println("SHOW RESULT");
		Scene.showResult();
	}
}

/* output:
 =======================================
CREATE SCENE
Создаю 8 юнитов
Created Monster "Monster0" located 0 health 10
У нового мага будет 1 страничная книга заклинаний:
ChainLightningAllOthers
Created Magician "Magician1" located 1 health 4
Created Monster "Monster2" located 2 health 13
Created Monster "Monster3" located 3 health 5
У нового мага будет 1 страничная книга заклинаний:
MigraineAllMagicians
Created Magician "Magician4" located 4 health 0
Created Monster "Monster5" located 7 health 12
Created Monster "Monster6" located 8 health 12
У нового мага будет 2 страничная книга заклинаний:
FireWallEvenPositions
ChaseAllMonsters
Created Magician "Magician7" located 9 health 0
=======================================
RUN GAME
--- game turn 1 ---
Monster0 стоит на поз. 0 и атакует Magician4 на поз. 4 на 7 единиц урона. Теперь у него -7 здоровья
Magician4 убит!!!!!!!!!!!!
Маг Magician1 читает заклинание ChainLightningAllOthers
Маг Magician1 нанес урон Monster0 на 2. Теперь у него 8 здоровья
Маг Magician1 нанес урон Monster2 на 2. Теперь у него 11 здоровья
Маг Magician1 нанес урон Monster3 на 2. Теперь у него 3 здоровья
Маг Magician1 нанес урон Magician4 на 2. Теперь у него -9 здоровья
Magician4 убит!!!!!!!!!!!!
Маг Magician1 нанес урон Monster5 на 2. Теперь у него 10 здоровья
Маг Magician1 нанес урон Monster6 на 2. Теперь у него 10 здоровья
Маг Magician1 нанес урон Magician7 на 2. Теперь у него -2 здоровья
Magician7 убит!!!!!!!!!!!!
Monster2 стоит на поз. 2 и атакует Monster5 на поз. 7 на 5 единиц урона. Теперь у него 5 здоровья
Monster3 стоит на поз. 3 и атакует Monster0 на поз. 0 на 7 единиц урона. Теперь у него 1 здоровья
Monster5 стоит на поз. 7 и атакует Monster2 на поз. 2 на 5 единиц урона. Теперь у него 6 здоровья
Monster6 стоит на поз. 8 и атакует Monster3 на поз. 3 на 6 единиц урона. Теперь у него -3 здоровья
Monster3 убит!!!!!!!!!!!!
--- game turn 2 ---
Monster0 стоит на поз. 0 и атакует Monster2 на поз. 2 на 7 единиц урона. Теперь у него -1 здоровья
Monster2 убит!!!!!!!!!!!!
Маг Magician1 читает заклинание ChainLightningAllOthers
Маг Magician1 нанес урон Monster0 на 1. Теперь у него 0 здоровья
Маг Magician1 нанес урон Monster2 на 1. Теперь у него -2 здоровья
Monster2 убит!!!!!!!!!!!!
Маг Magician1 нанес урон Monster3 на 1. Теперь у него -4 здоровья
Monster3 убит!!!!!!!!!!!!
Маг Magician1 нанес урон Magician4 на 1. Теперь у него -10 здоровья
Magician4 убит!!!!!!!!!!!!
Маг Magician1 нанес урон Monster5 на 1. Теперь у него 4 здоровья
Маг Magician1 нанес урон Monster6 на 1. Теперь у него 9 здоровья
Маг Magician1 нанес урон Magician7 на 1. Теперь у него -3 здоровья
Magician7 убит!!!!!!!!!!!!
Monster5 стоит на поз. 7 и атакует Magician1 на поз. 1 на 5 единиц урона. Теперь у него -1 здоровья
Magician1 убит!!!!!!!!!!!!
Monster6 стоит на поз. 8 и атакует Monster5 на поз. 7 на 6 единиц урона. Теперь у него -2 здоровья
Monster5 убит!!!!!!!!!!!!
--- game turn 3 ---
Monster0 стоит на поз. 0 и атакует Monster6 на поз. 8 на 7 единиц урона. Теперь у него 2 здоровья
Monster6 стоит на поз. 8 и атакует Monster0 на поз. 0 на 6 единиц урона. Теперь у него -6 здоровья
Monster0 убит!!!!!!!!!!!!
=======================================
SHOW RESULT
Победил Monster6 (тип Monster)
*/
/*
Задание 4. Битвы магов.
Сегодня будем делать игру.

Есть сцена (game.Scene).
На сцену можно добавить до 10 Персонажей (game.Character)
у каждого персонажа есть позиция (от 0 до 9). На которой он стоит.
 На позиции с одинаковым номером может стоять только один персонаж.
В позициях допускаются пропуски, например, на сцене могут быть всего
 два персонажа: на позиции 1 и на позиции 7.

У абстрактного персонажа есть характеристики:



Текущее здоровье: целое число
	Имя
	Если текущее здоровье у монстра стало отрицательным - он удаляется
	 со сцены и на экран выводится текст "<имя персонажа> убит"

Конкретные персонажи бывают двух типов:
Монстры. Могут атаковать любого персонажа, напрямую нанося урон здоровью.
	Количество урона для каждого конкретного монстра одинаковое, но разные
	 экземпляры монстров могут наносить разное количество урона.
	Если монстр атакует любого персонажа, - на экран должен выводится текст
	 "Монстр <имя> атакует <имя, цели> на <количество> единиц урона урона "
	Маги. Могут колдовать заклинания. Заклинания могут делать что угодно
	со сценой и персонажами на ней.
	У каждого мага есть список заклинаний, которые он может использовать,
	 но не больше 3.

Создайте абстрактный класс game.Spell с методом cast - произнесение заклинания
и полем "название заклинания".

Создайте несколько конкретных заклинаний. Например:
Исцеление - добавляет очков здоровья магу, произнесшему заклинания.
Молния - наносит урон любому персонажу.
Цепная молния - наносит урон, всем персонажам на сцене, кроме мага,
 который произносит заклинание.
Стена огня - наносит урон всем персонажам на четных позициях.
Огненное касание - наносит урон персонажу, стоящему на соседней с магом позиции.
Если на соседних позициях персонажей нет - никому урон не наносится.
Изгнание монстров - наносит урон всем монстрам.
Мигрень - наносит урон всем магам.

Если маг произносит любое заклинание то экран обязательно должен выводится
 общий текст для всех заклинаний:
"Маг <имя> читает заклинание <название заклинания>"
дополнительно должен быть выведен текст, зависящий от заклинания.
Например
"Маг <имя> исцелен на <количество добавленных очков здоровья>.
 Теперь у него <текущее количество> здоровья"
"Цепная молния ударяет по <список персонажей>. Каждый получает <количество> урона."

Игра - пошаговая. В каждый ход все персонажи со сцены делают одно действие:
монстр атакует кого-то, а маг читает любое известное ему заклинание.

Порядок, в котором персонажи выполняют действия может быть любым.
Каждый персонаж сам за себя, если на сцене остался только один персонаж -
 то игра завершается и на экран выводится имя и тип (маг, монстр) победившего персонажа.

Создайте сцену со случайным количеством случайных персонажей, запустите игру.

Замечания к заданию:



Задание довольно сложное и, скорее всего, растянется на несколько занятий.
	Обратите внимание, что многие вещи я намеренно не стал детализировать.
	Например, в каких классах располагаются методы, отвечающие за нанесение
	 урона и вывод сообщений на экран, кто управляет сценой и ходами,
	  как происходит генерация начальной сцены, какая книга заклинаний будет
	   у каждого мага, кого атакуют монстры или какое заклинание читает маг и т.п.

	Ваша задача - проанализировать требования и сделать такую структуру классов,
	 которая наиболее гибко будет решать эти требованиях.

	При проектировании структуры классов помните про "правила хорошего программирования":
	- Дублирование кода обычно плохо
	- Код должен быть простым и расширяемым.

	Например, что будет, если в игру добавится новый персонаж с какими-то новыми
	 способностями ( рыцарь, который от всех заклинаний получает только половину
	  урона или разбойник, который имеет некоторый шанс уклониться от атаки монстра)?
*/